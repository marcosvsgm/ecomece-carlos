version: '3.9'
services:
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   restart: always
  #   tty: true
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./:/var/www/html
  #     - ./nginx/conf.d/:/etc/nginx/conf.d/
  #     - ./nginx/ssl/:/etc/nginx/ssl/
  #     - ./nginx/logs/:/var/log/nginx/
  #   networks:
  #     - mynet
  # selenoid:
  #   image: "aerokube/selenoid"
  #   hostname: selenoid
  #   networks:
  #     - mynet
  #   ports:
  #     - "4444:4444"
  #   volumes:
  #     - "./etc/selenoid/:/etc/selenoid/" # assumed current dir contains browsers.json
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  # selenoid-ui:
  #   image: "aerokube/selenoid-ui"
  #   networks:
  #     - mynet
  #   links:
  #     - selenoid
  #   ports:
  #     - "8080:8080"
  #   command: ["--selenoid-uri", "http://selenoid:4444"]

  # phpmyadmin:
  #   image: phpmyadmin
  #   restart: always
  #   ports:
  #     - 8080:80
  #   environment:
  #     - PMA_HOST=db
  #     - PMA_ARBITRARY=1
  #   networks:
  #     - mynet
  db:
    image: mysql:5.7.33
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laraveldb
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravelpassworddb
      MYSQL_ROOT_PASSWORD: rootpasswordmysql
    volumes:
      - ./mysqldata:/var/lib/mysql/
    networks:
      - mynet
  # redis:
  #   container_name: redis
  #   image: redis
  #   restart: always
  #   command: redis-server --requirepass Redis2019!
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - mynet
  # app:
  #   container_name: app
  #   image: codew47/kiboleto:latest
  #   restart: always
  #   tty: true
  #   environment:
  #     SERVICE_NAME: app
  #     SERVICE_TAGS: dev
  #   working_dir: /var/www/html
  #   depends_on:
  #     - redis
  #     - db
  #     - nginx
  #   volumes:
  #     - ./:/var/www/html
  #   networks:
  #     - mynet
  app:
    build:
      context: .
      dockerfile: ./deploy-ecs/Dockerfile.app
    ports:
        - "80:80"
    restart: always
    volumes:
      - ./:/var/www/html
      - ./deploy-ecs/config-docker/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mynet
    deploy:
      resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            cpus: '0.25'
            memory: 256M
  # reverseproxy:
  #   build:
  #     context: .
  #     dockerfile: ./deploy-ecs/Dockerfile.nginx
  #   ports:
  #     - "80:80"
  #   restart: always
  #   links :
  #     - mymvcweb
networks:
  mynet:
    driver: bridge
volumes:
  mysqldata:
    driver: local
